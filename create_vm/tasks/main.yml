---
# tasks file for create_vm

- name: Search all keys in folder ~/.ssh/
  ansible.builtin.find:
    paths: ~/.ssh/
    patterns: '*.pub'
  register: ssh_key_files


- name: Check ssh keys in folder ~/.ssh/
  ansible.builtin.set_fact:
    ssh_key: "{{ lookup('file', ssh_key_files.files[0].path) }}"
  when: ssh_key_files.matched > 0


- name: Generate new SSH-key
  ansible.builtin.openssh_keypair:
    path: ~/.ssh/id_rsa
    state: present
  register: generated_ssh_key
  when: ssh_key_files.matched == 0


- name: Set the ssh_key variable from the newly created key
  ansible.builtin.set_fact:
    ssh_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  when: generated_ssh_key.changed


- name: Create vm
  ycc_vm:
    auth:
      token: "{{ token }}"
    name: tgbot
    login: "{{ user }}"
    public_ssh_key: "{{ ssh_key }}"
    hostname: tgbot
    zone_id: ru-central1-a
    folder_id: "{{ folder_id }}"
    platform_id: "Intel Ice Lake"
    core_fraction: 100
    cores: 2
    memory: 2
    image_id: "{{ image_id }}"
    disk_type: hdd
    disk_size: 25
    subnet_id: "{{ subnet_id }}"
    assign_public_ip: true
    preemptible: false
    state: present
  register: create_vm_result


- name: Extract server IP address
  set_fact:
    server_ip: "{{ create_vm_result.response.networkInterfaces[0].primaryV4Address.oneToOneNat.address }}"


- name: Create or update inventory.ini file
  template:
    src: inventory.ini.j2
    dest: ./inventory.ini
